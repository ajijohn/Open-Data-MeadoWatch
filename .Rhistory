sensi = subset(means, means$mean.metric=='sen')
speci = subset(means, means$mean.metric=='spe')
#sort in ascending order
accura = accura[order(accura$value),]
sensi = sensi[order(sensi$value),]
speci = speci[order(speci$value),]
#plot each metric as barplot
barplot(accura$value,
horiz=T,
xlim=c(0,1),
names=accura$species,
las=2,
xlab='% Accuracy per species',
col='grey80',
border=F)
box()
barplot(sensi$value,
horiz=T,
xlim=c(0,1),
names=sensi$species,
las=2,
xlab='% Sensitivity per species',
col='grey60',
border=F)
box()
barplot(speci$value,
horiz=T,
xlim=c(0,1),
names=speci$species,
las=2,
xlab='% specificity per species',
col='grey40',
border=F)
box()
##END OF CODE
############################DATA PAPER MEADOWATCH###################
###DATA COMPILED BY AJI JOHN
###FIGURES AND THIS ANALYSIS: RUBÉN D. MANZANEDO. APRIL-JULY 2021#########
###################PART 2######################
##Figure 2: Species composition of the plots
#load report data
MW_PhenoDat_2013_2019 <- read.csv("MW_PhenoDat_2013_2019.csv")
head(MW_PhenoDat_2013_2019)
#graphical parameters
par(bty="o")
par(lwd=2)
par(tcl=-0.2)
par(las=1)
par(cex.lab=1.2)
#keep the reports
species.dist = data.frame('species' = MW_PhenoDat_2013_2019$Species,
'observer' = MW_PhenoDat_2013_2019$Observer,
'transect' = MW_PhenoDat_2013_2019$Transect)
#remove all other duplicates
unique.species.dist= unique(species.dist)
#calculate the proportion of species per trail
rep.species = table(unique.species.dist[,-2])
rep.species2 = prop.table(rep.species,2)
#plot as a vector plot
barplot(rep.species2,
col = rainbow(dim(rep.species2)[1]),
ylab='Proportion of reports per species (%)')
#define the x position and the color coding to add labels on top
acc.pos.gb = cumsum(rep.species2[,1])
acc.pos.rl = cumsum(rep.species2[,2])
acc.lab.gb = rep.species2[,1] != 0
acc.lab.rl = rep.species2[,2] != 0
#labels appear on top (will me adjusted in inkscape, zero presence are wriTten white)
text(rownames(rep.species2),
x=rep(1, length(rownames(rep.species2))),
y=acc.pos.gb,
col=acc.lab.gb)
text(rownames(rep.species2),
x=rep(2, length(rownames(rep.species2))),
y=acc.pos.rl,
col=acc.lab.rl)
#calculate species per plot and then replace the elevations
MW_PhenoDat_2013_2019$Site_Code = as.factor(MW_PhenoDat_2013_2019$Site_Code)
levels(MW_PhenoDat_2013_2019$Site_Code) = c("GB01","GB10","GB11","GB12","GB13","GB14",
"GB15","GB16","GB17","GB02","GB03","GB04",
"GB05","GB06","GB07","GB08","GB09","RL01","RL10","RL11",
"RL02","RL03","RL03a","RL03a","RL03b","RL04","RL05","RL05a",
"RL05b","RL05b","RL06","RL07","RL08","RL09")
species.dist2 = data.frame('species' = MW_PhenoDat_2013_2019$Species,
'observer' = MW_PhenoDat_2013_2019$Observer,
'transect' = MW_PhenoDat_2013_2019$Transect,
'site_Code' = MW_PhenoDat_2013_2019$Site_Code)
#remove duplicates
unique.species.dist2= unique(species.dist2)
#calculate the proportion of species per plot and by proportion
alt.species = table(unique.species.dist2[,-c(2,3)])
#plots RL08 and RL09 have no records?
alt.species = alt.species[,-c(31,32)]
alt.species.prop = prop.table(alt.species,2)
#divide RL and GB
GB.species = alt.species[,1:17]
RL.species = alt.species[,18:30]
#sort them in increasing value fo the plots
GB.ordered = GB.species[,order(colnames(GB.species))]
RL.ordered = RL.species[,order(colnames(RL.species))]
#prepare color palettes and plot
coloring = c('white','dodgerblue3', 'dodgerblue4')
heatmap(GB.ordered,col = coloring, Colv = NA, Rowv=NA, scale='column')
coloring = c('white','white','orange', 'darkorange')
heatmap(RL.ordered, col=coloring, Colv = NA, Rowv=NA, scale='column')
#change order and remove not present species?
totals.GB= apply(MARGIN=1,GB.ordered, FUN='sum')
totals.RL= apply(MARGIN=1,RL.ordered, FUN='sum')
#####END OF CODE#########
#prepare color palettes and plot
coloring = c('white','white','orange', 'darkorange')
heatmap(GB.ordered,col = coloring, Colv = NA, Rowv=NA, scale='column')
coloring = c('white','dodgerblue3', 'dodgerblue4')
heatmap(RL.ordered, col=coloring, Colv = NA, Rowv=NA, scale='column')
############################DATA PAPER MEADOWATCH###################
###DATA COMPILED BY AJI JOHN
###FIGURES AND THIS ANALYSIS: RUBÉN D. MANZANEDO. APRIL-JULY 2021#########
###################PART 5######################
##Continuation of Figure 4: Data validation comparison of scientist vs. citizen scientists
#load accuracies data per phenostate and species
phenostates = read.csv('Accuracy per phenostate-trail.csv')
head(phenostates)
#graphical parameters
par(bty="o")
par(lwd=2)
par(tcl=-0.2)
par(las=1)
par(cex.lab=1.2)
#Figure 4a: metrics per phenostate
#set the x-axes values for plotting and a small offset for the different hikes
phenostates$Y = 1:4
phenostates$Y2 = phenostates$Y+0.2
#plot each phenostate
plot(accuracy.rl~Y, phenostates,
pch=21,
bg='orange',
lwd=0.5,
cex=2,
ylim=c(0,1),
xlim=c(0.5,4.5),
main='Assessment scientists vs. citizens',
axes=F,
xlab='Phenostates',
ylab='Metric value')
axis(1, labels=c('Budding','Flowering','Fruiting','Seeding'),
at=c(1:4))
axis(2)
box()
points(accuracy.gb~Y2, phenostates,
pch=21,
bg='steelblue3',
cex=2,
lwd=0.5)
points(sensitivity.rl~Y, phenostates,
pch=24,
bg='orange',
lwd=0.5,
cex=2,
ylim=c(0,1))
points(sensitivity.gb~Y2, phenostates,
pch=24,
bg='steelblue3',
cex=2,
lwd=0.5)
points(specificity.rl~Y, phenostates,
pch=23,
bg='orange',
lwd=0.5,
cex=2,
ylim=c(0,1))
points(specificity.gb~Y2, phenostates,
pch=23,
bg='steelblue3',
cex=2,
lwd=0.5)
##add the legends
legend('bottomleft',
legend=c('Accuracy', 'Sensitivity', 'Specificity'),
pch=c(21,24,23),
lwd=1,
box.col='white',
cex=1.25)
legend('bottomright',
legend=c('Glacier Basin', 'Reflection Lakes'),
col=c('orange','steelblue3'),
pch=16,
lwd=1,
box.col='white',
cex=1.25)
###Figure 4b: metrics per species
#load species data
species = read.csv('Accuracy per species.csv')
means = read.csv('Mean_metrics_per_species.csv')
head(species)
position.sp = as.numeric(as.factor(species$species))
pch.vector = length(species$phenostate)/4
color.orange = rgb(255/255,165/255,0/255,0.4)
color.blue = rgb(79/255,148/255,205/255,0.6)
#ACCURACIES
plot(accuracy.rl~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.orange,
lwd=0.5,
cex=2,
ylim=c(0,1),
main='Accuracy per species',
axes=F,
xlab='Species',
ylab='Metric value')
axis(1, labels=unique(species$species),
at=unique(as.numeric(position.sp)),
las=2)
axis(2)
box()
points(accuracy.gb~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.blue,
cex=2,
lwd=0.5)
#SENSITIVITIES
plot(sensitivity.rl~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.blue,
lwd=0.5,
cex=2,
ylim=c(0,1),
main='Sensitivity per species',
axes=F,
xlab='Species',
ylab='Metric value')
axis(1, labels=unique(species$species),
at=unique(as.numeric(position.sp)),
las=2)
axis(2)
box()
points(sensitivity.gb~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.orange,
cex=2,
lwd=0.5)
#SPECIFICITIES
plot(specificity.rl~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.blue,
lwd=0.5,
cex=2,
ylim=c(0,1),
main='Specificity per species',
axes=F,
xlab='Species',
ylab='Metric value')
axis(1, labels=unique(species$species),
at=unique(as.numeric(position.sp)),
las=2)
axis(2)
box()
points(specificity.gb~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.orange,
cex=2,
lwd=0.5)
legend('bottomleft',
legend=c('Budding', 'Flowering','Fruiting','Seeding'),
pch=c(16,17,18,19),
lwd=1,
box.col='white',
cex=1.25)
#ALTERNATIVE VERSION, SHOWING ONLY MEANS AS BARPLOTS? MAYBE WITH CIs?
means = read.csv('Mean_metrics_per_species.csv')
accura = subset(means, means$mean.metric=='acc')
sensi = subset(means, means$mean.metric=='sen')
speci = subset(means, means$mean.metric=='spe')
#sort in ascending order
accura = accura[order(accura$value),]
sensi = sensi[order(sensi$value),]
speci = speci[order(speci$value),]
#plot each metric as barplot
barplot(accura$value,
horiz=T,
xlim=c(0,1),
names=accura$species,
las=2,
xlab='% Accuracy per species',
col='grey80',
border=F)
box()
barplot(sensi$value,
horiz=T,
xlim=c(0,1),
names=sensi$species,
las=2,
xlab='% Sensitivity per species',
col='grey60',
border=F)
box()
barplot(speci$value,
horiz=T,
xlim=c(0,1),
names=speci$species,
las=2,
xlab='% specificity per species',
col='grey40',
border=F)
box()
##END OF CODE
############################DATA PAPER MEADOWATCH###################
###DATA COMPILED BY AJI JOHN
###FIGURES AND THIS ANALYSIS: RUBÉN D. MANZANEDO. APRIL-JULY 2021#########
###################PART 5######################
##Continuation of Figure 4: Data validation comparison of scientist vs. citizen scientists
#load accuracies data per phenostate and species
phenostates = read.csv('Accuracy per phenostate-trail.csv')
head(phenostates)
#graphical parameters
par(bty="o")
par(lwd=2)
par(tcl=-0.2)
par(las=1)
par(cex.lab=1.2)
#Figure 4a: metrics per phenostate
#set the x-axes values for plotting and a small offset for the different hikes
phenostates$Y = 1:4
phenostates$Y2 = phenostates$Y+0.2
#plot each phenostate
plot(accuracy.rl~Y, phenostates,
pch=21,
bg='orange',
lwd=0.5,
cex=2,
ylim=c(0,1),
xlim=c(0.5,4.5),
main='Assessment scientists vs. citizens',
axes=F,
xlab='Phenostates',
ylab='Metric value')
axis(1, labels=c('Budding','Flowering','Fruiting','Seeding'),
at=c(1:4))
axis(2)
box()
points(accuracy.gb~Y2, phenostates,
pch=21,
bg='steelblue3',
cex=2,
lwd=0.5)
points(sensitivity.rl~Y, phenostates,
pch=24,
bg='orange',
lwd=0.5,
cex=2,
ylim=c(0,1))
points(sensitivity.gb~Y2, phenostates,
pch=24,
bg='steelblue3',
cex=2,
lwd=0.5)
points(specificity.rl~Y, phenostates,
pch=23,
bg='orange',
lwd=0.5,
cex=2,
ylim=c(0,1))
points(specificity.gb~Y2, phenostates,
pch=23,
bg='steelblue3',
cex=2,
lwd=0.5)
##add the legends
legend('bottomleft',
legend=c('Accuracy', 'Sensitivity', 'Specificity'),
pch=c(21,24,23),
lwd=1,
box.col='white',
cex=1.25)
legend('bottomright',
legend=c('Glacier Basin', 'Reflection Lakes'),
col=c('orange','steelblue3'),
pch=16,
lwd=1,
box.col='white',
cex=1.25)
###Figure 4b: metrics per species
#load species data
species = read.csv('Accuracy per species.csv')
means = read.csv('Mean_metrics_per_species.csv')
head(species)
position.sp = as.numeric(as.factor(species$species))
pch.vector = length(species$phenostate)/4
color.orange = rgb(255/255,165/255,0/255,0.4)
color.blue = rgb(79/255,148/255,205/255,0.6)
#ACCURACIES
plot(accuracy.rl~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.orange,
lwd=0.5,
cex=2,
ylim=c(0,1),
main='Accuracy per species',
axes=F,
xlab='Species',
ylab='Metric value')
axis(1, labels=unique(species$species),
at=unique(as.numeric(position.sp)),
las=2)
axis(2)
box()
points(accuracy.gb~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.blue,
cex=2,
lwd=0.5)
#SENSITIVITIES
plot(sensitivity.rl~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.blue,
lwd=0.5,
cex=2,
ylim=c(0,1),
main='Sensitivity per species',
axes=F,
xlab='Species',
ylab='Metric value')
axis(1, labels=unique(species$species),
at=unique(as.numeric(position.sp)),
las=2)
axis(2)
box()
points(sensitivity.gb~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.orange,
cex=2,
lwd=0.5)
#SPECIFICITIES
plot(specificity.rl~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.blue,
lwd=0.5,
cex=2,
ylim=c(0,1),
main='Specificity per species',
axes=F,
xlab='Species',
ylab='Metric value')
axis(1, labels=unique(species$species),
at=unique(as.numeric(position.sp)),
las=2)
axis(2)
box()
points(specificity.gb~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.orange,
cex=2,
lwd=0.5)
legend('bottomleft',
legend=c('Budding', 'Flowering','Fruiting','Seeding'),
pch=c(16,17,18,19),
lwd=1,
box.col='white',
cex=1.25)
#ALTERNATIVE VERSION, SHOWING ONLY MEANS AS BARPLOTS? MAYBE WITH CIs?
means = read.csv('Mean_metrics_per_species.csv')
accura = subset(means, means$mean.metric=='acc')
sensi = subset(means, means$mean.metric=='sen')
speci = subset(means, means$mean.metric=='spe')
#sort in ascending order
accura = accura[order(accura$value),]
sensi = sensi[order(sensi$value),]
speci = speci[order(speci$value),]
#plot each metric as barplot
barplot(accura$value,
horiz=T,
xlim=c(0,1),
names=accura$species,
las=2,
xlab='% Accuracy per species',
col='grey80',
border=F)
box()
barplot(sensi$value,
horiz=T,
xlim=c(0,1),
names=sensi$species,
las=2,
xlab='% Sensitivity per species',
col='grey60',
border=F)
box()
barplot(speci$value,
horiz=T,
xlim=c(0,1),
names=speci$species,
las=2,
xlab='% specificity per species',
col='grey40',
border=F)
box()
##END OF CODE
#Figure 4a: metrics per phenostate
#set the x-axes values for plotting and a small offset for the different hikes
phenostates$Y = 1:4
phenostates$Y2 = phenostates$Y+0.2
#plot each phenostate
plot(accuracy.rl~Y, phenostates,
pch=21,
bg='orange',
lwd=0.5,
cex=2,
ylim=c(0,1),
xlim=c(0.5,4.5),
main='Assessment scientists vs. citizens',
axes=F,
xlab='Phenostates',
ylab='Metric value')
