col = coloring[2],
bg = coloring[2],
lwd=lining,
type='b',
pch=21)
lines (Freq~month,
subset(rep.month, transect=='Glacier Basin' & year == '2015'),
col = coloring[3],
bg= coloring[3],
lwd=lining,
type='b',
pch=22)
lines (Freq~month,
subset(rep.month, transect=='Glacier Basin' & year == '2016'),
col = coloring[4],
bg = coloring[4],
lwd=lining,
type='b',
pch=23)
lines (Freq~month,
subset(rep.month, transect=='Glacier Basin' & year == '2017'),
col = coloring[5],
bg = coloring[5],
lwd=lining,
type='b',
pch=24)
lines (Freq~month,
subset(rep.month, transect=='Glacier Basin' & year == '2018'),
col = coloring[6],
bg= coloring [6],
lwd=lining,
type='b',
pch=25)
lines (Freq~month,
subset(rep.month, transect=='Glacier Basin' & year == '2019'),
col = coloring[7],
bg = coloring[7],
lwd=lining,
pch=26)
legend('topleft',
legend=as.character(2013:2019),
col=c(coloring[1:7]),
pch=20:25,
lwd=2,
box.lwd=0)
###same for reflection lakes
plot(Freq~month,
data=subset(rep.month, transect=='Reflection Lakes' & year == '2013'),
type='b',
ylim=c(0,60),
col=coloring[1],
ylab='Number of reports per month',
xlab='Month',
axes=F,
main='Reflection Lakes',
lwd=lining,
pch=20)
axis(1, at= 1:6, labels=c('May',
'June',
'July',
'August',
'September',
'October'))
axis(2)
box()
lines (Freq~month,
subset(rep.month, transect=='Reflection Lakes' & year == '2014'),
col = coloring[2],
bg=coloring[2],
lwd=lining,
type='b',
pch=21)
lines (Freq~month,
subset(rep.month, transect=='Reflection Lakes' & year == '2015'),
col = coloring[3],
bg = coloring[3],
lwd=lining,
type='b',
pch=22)
lines (Freq~month,
subset(rep.month, transect=='Reflection Lakes' & year == '2016'),
col = coloring[4],
bg = coloring[4],
lwd=lining,
type='b',
pch=23)
lines (Freq~month,
subset(rep.month, transect=='Reflection Lakes' & year == '2017'),
col = coloring[5],
bg= coloring[5],
lwd=lining,
type='b',
pch=24)
lines (Freq~month,
subset(rep.month, transect=='Reflection Lakes' & year == '2018'),
col = coloring[6],
bg = coloring[6],
lwd=lining,
type='b',
pch=25)
lines (Freq~month,
subset(rep.month, transect=='Reflection Lakes' & year == '2019'),
col = coloring[6],
lwd=lining,
pch=26)
##load the plots coordinates and elevation
MW_SiteInfo_2013_2020 = read.csv("MW_SiteInfo_2013_2020.csv")
head(MW_SiteInfo_2013_2020)
#mapping libraries and some graphical parameters
library(ggmap)
library(ggplot2)
par(bty="o")
par(lwd=2)
par(tcl=-0.2)
par(las=1)
par(cex.lab=1.2)
#define the edges of the map for the satelite image
bounds = c(left = -121.85,
bottom = 46.74,
right = -121.5,
top = 46.95)
#plot the satelite and locations, color according to elevation value
map = ggmap(mtrain) +
geom_point(aes(y = Latitude,
x = Longitude,
colour = Elevation,
size=2),
data = MW_SiteInfo_2013_2020)
map+scale_color_gradient(low="blue",high="indianred")
map+scale_color_gradientn(colours = rainbow(5))
#load report data
MW_PhenoDat_2013_2019 <- read.csv("MW_PhenoDat_2013_2019.csv")
head(MW_PhenoDat_2013_2019)
#there are multiple reports per year (and potentially per day), subset to observer to make table
reports.peryear = data.frame('year' = MW_PhenoDat_2013_2019$Year,
'observer' = MW_PhenoDat_2013_2019$Observer,
'transect' = MW_PhenoDat_2013_2019$Transect)
#remove all other duplicates
unique.reports=unique(reports.peryear)
#number formatting of table results and adding the year numbers
rep.year = data.frame(table(unique.reports[,-2]))
rep.year$Freq = as.numeric(rep.year$Freq)
rep.year$year = 2013:2019
#remove zeros for plotting
rep.year$Freq[rep.year$Freq==0] = NA
#plot
plot(Freq~year, data=subset(rep.year, transect=='Glacier Basin'),
pch=20,
type='b',
col='orange',
xlim=c(2013,2020),
ylim=c(0,100),
ylab='Number of reports per year',
xlab='Year',
lwd=4,
cex=3)
lines(Freq~year, data=subset(rep.year, transect=='Reflection Lakes'),
pch=20,
type='b',
col= 'dodgerblue4',
lwd=4,
cex=3)
text(2019.7,70, 'Glacier Basin', col='orange')
text(2019.7,85, 'Reflection Lakes', col='dodgerblue3')
#plot
plot(Freq~year, data=subset(rep.year, transect=='Glacier Basin'),
pch=20,
type='b',
col='orange',
xlim=c(2013,2020),
ylim=c(0,100),
ylab='Number of reports per year',
xlab='Year',
lwd=4,
cex=3)
#plot
par(mfcol=c(1,1))
plot(Freq~year, data=subset(rep.year, transect=='Glacier Basin'),
pch=20,
type='b',
col='orange',
xlim=c(2013,2020),
ylim=c(0,100),
ylab='Number of reports per year',
xlab='Year',
lwd=4,
cex=3)
lines(Freq~year, data=subset(rep.year, transect=='Reflection Lakes'),
pch=20,
type='b',
col= 'dodgerblue4',
lwd=4,
cex=3)
text(2019.7,70, 'Glacier Basin', col='orange')
text(2019.7,85, 'Reflection Lakes', col='dodgerblue3')
######Records per each month######
#there multiple reports per year (and potentially per day), subset to observer to make table
reports.permonth = data.frame('month' = MW_PhenoDat_2013_2019$Month,
'observer' = MW_PhenoDat_2013_2019$Observer,
'transect' = MW_PhenoDat_2013_2019$Transect,
'year' = MW_PhenoDat_2013_2019$Year)
#remove all other duplicates
head(reports.permonth)
unique.reports2=unique(reports.permonth)
#number formatting of table results and adding the month labels
rep.month = data.frame(table(unique.reports2[,-2]))
rep.month$Freq = as.numeric(rep.month$Freq)
rep.month$month = as.numeric(rep.month$month)
#plot GB number of reports per year and month
#generate a ramp palette for colors and define line width
colfunc <- colorRampPalette(c("red", "blue"), interpolate="spline")
coloring = colfunc(8)
lining = 1
#plot Glacier basin as lines 'b'
par(mfcol=c(1,2))
plot(Freq~month,
data=subset(rep.month, transect=='Glacier Basin' & year == '2013'),
type='b',
ylim=c(0,60),
col=coloring[1],
ylab='Number of reports per month',
xlab='Month',
axes=F,
main='Glacier Basin',
lwd=lining,
pch=20)
#define x labels
axis(1, at= 1:6, labels=c('May',
'June',
'July',
'August',
'September',
'October'))
axis(2)
box()
#add lines per years
lines (Freq~month,
subset(rep.month, transect=='Glacier Basin' & year == '2014'),
col = coloring[2],
bg = coloring[2],
lwd=lining,
type='b',
pch=21)
lines (Freq~month,
subset(rep.month, transect=='Glacier Basin' & year == '2015'),
col = coloring[3],
bg= coloring[3],
lwd=lining,
type='b',
pch=22)
lines (Freq~month,
subset(rep.month, transect=='Glacier Basin' & year == '2016'),
col = coloring[4],
bg = coloring[4],
lwd=lining,
type='b',
pch=23)
lines (Freq~month,
subset(rep.month, transect=='Glacier Basin' & year == '2017'),
col = coloring[5],
bg = coloring[5],
lwd=lining,
type='b',
pch=24)
lines (Freq~month,
subset(rep.month, transect=='Glacier Basin' & year == '2018'),
col = coloring[6],
bg= coloring [6],
lwd=lining,
type='b',
pch=25)
lines (Freq~month,
subset(rep.month, transect=='Glacier Basin' & year == '2019'),
col = coloring[7],
bg = coloring[7],
lwd=lining,
pch=26)
#add the legend
legend('topleft',
legend=as.character(2013:2019),
col=c(coloring[1:7]),
pch=20:25,
lwd=2,
box.lwd=0)
###exact same for reflection lakes
plot(Freq~month,
data=subset(rep.month, transect=='Reflection Lakes' & year == '2013'),
type='b',
ylim=c(0,60),
col=coloring[1],
ylab='Number of reports per month',
xlab='Month',
axes=F,
main='Reflection Lakes',
lwd=lining,
pch=20)
axis(1, at= 1:6, labels=c('May',
'June',
'July',
'August',
'September',
'October'))
axis(2)
box()
lines (Freq~month,
subset(rep.month, transect=='Reflection Lakes' & year == '2014'),
col = coloring[2],
bg=coloring[2],
lwd=lining,
type='b',
pch=21)
lines (Freq~month,
subset(rep.month, transect=='Reflection Lakes' & year == '2015'),
col = coloring[3],
bg = coloring[3],
lwd=lining,
type='b',
pch=22)
lines (Freq~month,
subset(rep.month, transect=='Reflection Lakes' & year == '2016'),
col = coloring[4],
bg = coloring[4],
lwd=lining,
type='b',
pch=23)
lines (Freq~month,
subset(rep.month, transect=='Reflection Lakes' & year == '2017'),
col = coloring[5],
bg= coloring[5],
lwd=lining,
type='b',
pch=24)
lines (Freq~month,
subset(rep.month, transect=='Reflection Lakes' & year == '2018'),
col = coloring[6],
bg = coloring[6],
lwd=lining,
type='b',
pch=25)
lines (Freq~month,
subset(rep.month, transect=='Reflection Lakes' & year == '2019'),
col = coloring[6],
lwd=lining,
pch=26)
####END OF CODE
##Figure 2: Species composition of the plots
#load report data
MW_PhenoDat_2013_2019 <- read.csv("MW_PhenoDat_2013_2019.csv")
head(MW_PhenoDat_2013_2019)
species.dist = data.frame('species' = MW_PhenoDat_2013_2019$Species,
'observer' = MW_PhenoDat_2013_2019$Observer,
'transect' = MW_PhenoDat_2013_2019$Transect)
#remove all other duplicates
unique.species.dist= unique(species.dist)
#number formatting of talbe results
rep.species = data.frame(table(unique.species.dist[,-2]))
rep.species$Freq = as.numeric(rep.species$Freq)
gb.species = subset(rep.species, rep.species$transect=='Glacier Basin')
rl.species = subset(rep.species, rep.species$transect=='Reflection Lakes')
#plot
cols = palette(rainbow(18))
cols.sec = adjustcolor(cols, alpha.f=0.6)
par(mfcol=c(1,2))
pie(gb.species$Freq,
labels=gb.species$species,
col=cols.sec,
lty=0,
main='Glacier Basin reports per species')
cols.sec = adjustcolor(cols, alpha.f=0.8)
par(mfcol=c(1,2))
pie(gb.species$Freq,
labels=gb.species$species,
col=cols.sec,
lty=0,
main='Glacier Basin reports per species')
pie(rl.species$Freq,
labels=rl.species$species,
col=cols.sec,
lty=0,
main='Reflection Lakes reports per species')
rainbow(18)
pie(gb.species$Freq,
labels=gb.species$species,
col=cols.sec,
lty=0,
main='Glacier Basin reports per species')
#remove all other duplicates
unique.species.dist= unique(species.dist)
rep.species
rep.species$Freq = as.numeric(rep.species$Freq)
gb.species = subset(rep.species, rep.species$transect=='Glacier Basin')
rl.species = subset(rep.species, rep.species$transect=='Reflection Lakes')
rep.species
bp = barplot(gb.species)
bp = barplot(gb.species$species)
gb.species
bp = barplot(gb.species$species[,c(1,3)])
bp = barplot(gb.species[,c(1,3)])
gb.species[,c(1,3)
]
data.frame(gb.species[,c(1,3)]))
data.frame(gb.species[,c(1,3)])
bp = barplot(data.frame(gb.species[,c(1,3)]))
barplot(data.frame(gb.species[,c(1,3)]))
##Figure 2: Species composition of the plots
#load report data
MW_PhenoDat_2013_2019 <- read.csv("MW_PhenoDat_2013_2019.csv")
head(MW_PhenoDat_2013_2019)
species.dist = data.frame('species' = MW_PhenoDat_2013_2019$Species,
'observer' = MW_PhenoDat_2013_2019$Observer,
'transect' = MW_PhenoDat_2013_2019$Transect)
species.dist
#remove all other duplicates
unique.species.dist= unique(species.dist)
##Figure 2: Species composition of the plots
#load report data
MW_PhenoDat_2013_2019 <- read.csv("MW_PhenoDat_2013_2019.csv")
head(MW_PhenoDat_2013_2019)
#remove all other duplicates
unique.species.dist= unique(species.dist)
#number formatting of talbe results
rep.species = data.frame(table(unique.species.dist[,-2]))
rep.species
#number formatting of talbe results
rep.species = table(unique.species.dist[,-2])
rep.species
#number formatting of talbe results
rep.species = t(table(unique.species.dist[,-2]))
rep.species
rep.species = prop.table(rep.species)
rep.species2 = prop.table(rep.species)
#number formatting of table results
rep.species = table(unique.species.dist[,-2])
rep.species2 = prop.table(rep.species)
rep.species2
barplot(rep.species)
barplot(rep.species2)
#number formatting of table results
rep.species = table(unique.species.dist[,-2])
rep.species
barplot(rep.species2, 2)
rep.species2 = prop.table(rep.species,2)
barplot(rep.species2)
rep.species2
rep.species
#plot
cols = palette(rainbow(13))
barplot(rep.species2,
col = rainbow.colors(13))
barplot(rep.species2,
col = rainbow(13))
dim(rep.species2)[1]
barplot(rep.species2,
col = rainbow(dim(rep.species2)[1]))
par(mfcol=c(1,1))
barplot(rep.species2,
col = rainbow(dim(rep.species2)[1]))
barplot(rep.species2,
col = rainbow(dim(rep.species2)[1]),
legend.text=T)
rep.species2
labelling = rep.species2
labelling$Glacier Basin
labelling = rep.species2
labelling
rep.species2[,2]
cumsum(rep.species2[,2])
rep.species2[,2] == 0
acc.pos.gb = cumsum(rep.species2[,2])
acc.pos.rl = cumsum(rep.species2[,3])
acc.lab.gb = rep.species2[,2] != 0
acc.lab.rl = rep.species2[,3] != 0
acc.pos.rl = cumsum(rep.species2[,3])
rep.species2
rep.species2[,3]
rep.species2[,2]
rep.species2[,1]
acc.pos.gb = cumsum(rep.species2[,1])
acc.pos.rl = cumsum(rep.species2[,2])
acc.lab.rl = rep.species2[,2] != 0
acc.lab.gb = rep.species2[,1] != 0
acc.lab.rl
names(rep.species2)
rownames(rep.species2)
text(rownames(rep.species2),
x=rep(1, lenght(rownames(rep.species2))))
text(rownames(rep.species2),
x=rep(1, length(rownames(rep.species2))))
text(rownames(rep.species2),
x=rep(1, length(rownames(rep.species2))),
y=acc.pos.gb)
text(rownames(rep.species2),
x=rep(1, length(rownames(rep.species2))),
y=acc.pos.gb,
col=acc.lab.gb)
barplot(rep.species2,
col = rainbow(dim(rep.species2)[1]),
legend.text=T)
acc.pos.gb = cumsum(rep.species2[,1])
acc.pos.rl = cumsum(rep.species2[,2])
acc.lab.gb = rep.species2[,1] != 0
acc.lab.rl = rep.species2[,2] != 0
text(rownames(rep.species2),
x=rep(1, length(rownames(rep.species2))),
y=acc.pos.gb,
col=acc.lab.gb)
levels(acc.lab.gb)
str(acc.lab.gb)
text(rownames(rep.species2),
x=rep(2, length(rownames(rep.species2))),
y=acc.pos.rl,
col=acc.lab.rl)
