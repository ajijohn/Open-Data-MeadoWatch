points(accuracy.gb~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.blue,
cex=2,
lwd=0.5)
#add the mean values per species
means = read.csv('Mean_metrics_per_species.csv')
accura = subset(means, means$mean.metric=='acc')
sensi = subset(means, means$mean.metric=='sen')
speci = subset(means, means$mean.metric=='spe')
accura
#sort in alphabetical order
accura = accura[order(accura$species),]
accura
points(accura$value,
pch=8,
col='orange',
lwd=3)
points(accura$value,
pch=8,
col='red',
lwd=3)
#SENSITIVITIES
plot(sensitivity.rl~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.blue,
lwd=0.5,
cex=2,
ylim=c(0,1),
main='Sensitivity per species',
axes=F,
xlab='Species',
ylab='Metric value')
axis(1, labels=unique(species$species),
at=unique(as.numeric(position.sp)),
las=2)
axis(2)
box()
points(sensitivity.gb~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.orange,
cex=2,
lwd=0.5)
#add the mean values per species
sen = subset(means, means$mean.metric=='sen')
#sort in alphabetical order
sen = sen[order(sen$species),]
points(sen$value,
pch=8,
col='red',
lwd=3)
sen
means
#SENSITIVITIES
plot(sensitivity.rl~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.blue,
lwd=0.5,
cex=2,
ylim=c(0,1),
main='Sensitivity per species',
axes=F,
xlab='Species',
ylab='Metric value')
axis(1, labels=unique(species$species),
at=unique(as.numeric(position.sp)),
las=2)
axis(2)
box()
points(sensitivity.gb~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.orange,
cex=2,
lwd=0.5)
sensi = subset(means, means$mean.metric=='sen')
#sort in alphabetical order
sen = sen[order(sen$species),]
points(sen$value,
pch=8,
col='red',
lwd=3)
sen = subset(means, means$mean.metric=='spe')
#sort in alphabetical order
sen = sen[order(sen$species),]
points(sen$value,
pch=8,
col='red',
lwd=3)
species
#ALTERNATIVE VERSION, SHOWING ONLY MEANS AS BARPLOTS? MAYBE WITH CIs?
means = read.csv('Mean_metrics_per_species.csv')
means
#ALTERNATIVE VERSION, SHOWING ONLY MEANS AS BARPLOTS? MAYBE WITH CIs?
means = read.csv('Mean_metrics_per_species.csv')
sen = subset(means, means$mean.metric=='spe')
sen = subset(means, means$mean.metric=='sen')
#sort in alphabetical order
sen = sen[order(sen$species),]
points(sen$value,
pch=8,
col='red',
lwd=3)
#SENSITIVITIES
plot(sensitivity.rl~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.blue,
lwd=0.5,
cex=2,
ylim=c(0,1),
main='Sensitivity per species',
axes=F,
xlab='Species',
ylab='Metric value')
axis(1, labels=unique(species$species),
at=unique(as.numeric(position.sp)),
las=2)
axis(2)
box()
points(sensitivity.gb~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.orange,
cex=2,
lwd=0.5)
#add the mean values per species
sen = subset(means, means$mean.metric=='sen')
#sort in alphabetical order
sen = sen[order(sen$species),]
points(sen$value,
pch=8,
col='red',
lwd=3)
#SPECIFICITIES
plot(specificity.rl~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.blue,
lwd=0.5,
cex=2,
ylim=c(0,1),
main='Specificity per species',
axes=F,
xlab='Species',
ylab='Metric value')
axis(1, labels=unique(species$species),
at=unique(as.numeric(position.sp)),
las=2)
axis(2)
box()
points(specificity.gb~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.orange,
cex=2,
lwd=0.5)
legend('bottomleft',
legend=c('Budding', 'Flowering','Fruiting','Seeding'),
pch=c(16,17,18,19),
lwd=1,
box.col='white',
cex=1.25)
#add the mean values per species
spe = subset(means, means$mean.metric=='spe')
#sort in alphabetical order
spe = spe[order(spe$species),]
points(spe$value,
pch=8,
col='red',
lwd=3)
#load accuracies data per phenostate and species
phenostates = read.csv('Accuracy per phenostate-trail.csv')
head(phenostates)
boxplot(phenostates)
boxplot(phenostates$accuracy.rl)
boxplot(phenostates$accuracy.rl, phenostates$accuracy.gb)
boxplot(phenostates$accuracy.rl, phenostates$sensitivity.rl)
boxplot(phenostates$accuracy.rl, phenostates$sensitivity.rl, notch=T)
boxplot(phenostates$accuracy.rl, phenostates$specificity.rl, notch=T)
MW_PhenoDat_2013_2019 <- read.csv("MW_PhenoDat_2013_2019.csv")
head(MW_PhenoDat_2013_2019)
#basic graphical parameters
par(bty="o")
par(lwd=2)
par(tcl=-0.2)
par(las=1)
par(cex.lab=1.2)
#here we have to first pair each scientist observation with observations on the very same day and track
#split in scientists and citizens
scientists = subset(MW_PhenoDat_2013_2019, MW_PhenoDat_2013_2019$QA.QC ==1)
citizens = subset(MW_PhenoDat_2013_2019, MW_PhenoDat_2013_2019$QA.QC == 0)
#and also in tracks, to pair identical situations
sci.gb = subset(scientists, scientists$Transect == "Glacier Basin")
cit.gb = subset(citizens, citizens$Transect == "Glacier Basin")
sci.rl = subset(scientists, scientists$Transect == "Reflection Lakes")
cit.rl = subset(citizens, citizens$Transect == "Reflection Lakes")
######CONFUSION MATRICES AND ACCURACY PER TRAIL#######
#let's keep the variables of importance for each
sci.assessment.gb = data.frame('Date' = sci.gb$Date,
'Species' = sci.gb$Species,
'Plot' = sci.gb$Site_Code,
'sci.Budding' = sci.gb$Bud,
'sci.Flowering' = sci.gb$Flower,
'sci.Fruiting' = sci.gb$Fruit,
'sci.Seeding' = sci.gb$Disperse)
non.sci.assessment.gb = data.frame('Date' = cit.gb$Date,
'Species' = cit.gb$Species,
'Plot' = cit.gb$Site_Code,
'cit.Budding' = cit.gb$Bud,
'cit.Flowering' = cit.gb$Flower,
'cit.Fruiting' = cit.gb$Fruit,
'cit.Seeding' = cit.gb$Disperse)
#same for reflection lakes
sci.assessment.rl = data.frame('Date' = sci.rl$Date,
'Species' = sci.rl$Species,
'Plot' = sci.rl$Site_Code,
'sci.Budding' = sci.rl$Bud,
'sci.Flowering' = sci.rl$Flower,
'sci.Fruiting' = sci.rl$Fruit,
'sci.Seeding' = sci.rl$Disperse)
non.sci.assessment.rl = data.frame('Date' = cit.rl$Date,
'Species' = cit.rl$Species,
'Plot' = cit.rl$Site_Code,
'cit.Budding' = cit.rl$Bud,
'cit.Flowering' = cit.rl$Flower,
'cit.Fruiting' = cit.rl$Fruit,
'cit.Seeding' = cit.rl$Disperse)
#merge removing incomparables (date, species, and plot need to be identical match)
togetherness.gb = merge(sci.assessment.gb, non.sci.assessment.gb,all = F)
togetherness.rl = merge(sci.assessment.rl, non.sci.assessment.rl, all=F)
#FUNCTION to calculate confusion matrix and some main agreement metrics#
agreement.sci.cit = function(dataset, phenostate){
#define the phenostate to study
if(phenostate=='budding') {a=0}
if(phenostate=='flowering') {a=1}
if(phenostate=='fruiting') {a=2}
if(phenostate=='seeding') {a=3}
#the a value determines the columns we are checking, as they go in that order
#calculate confusion matrix elements and print them
SY.CY = dim(subset(dataset, dataset[,4+a] == 1 & dataset[8+a] == 1))[1]
SY.CN = dim(subset(dataset, dataset[,4+a] == 1 & dataset[8+a] == 0))[1]
SN.CY = dim(subset(dataset, dataset[,4+a] == 0 & dataset[8+a] == 1))[1]
SN.CN = dim(subset(dataset, dataset[,4+a] == 0 & dataset[8+a] == 0))[1]
print(c('true pos =', SY.CY))
print(c('sci.pos.cit.neg = ',SY.CN))
print(c('sci.neg.cit.pos = ',SN.CY))
print(c('true neg =', SN.CN))
#calculate main metrics and print it, here we assume that
#scientists define the 'true value' for the sake of the confusion matrix
acc = ((SY.CY + SN.CN) / (SY.CY+SY.CN+SN.CY+SN.CN))
sen = (SY.CY / (SY.CY+SY.CN))
spe = (SN.CN / (SN.CN+SN.CY))
print(c('accuracy =', acc))
print(c('sensitivity =', sen))
print(c('specificity =', spe))
}
#calculate for each state
agreement.sci.cit(togetherness.gb,'budding')
agreement.sci.cit(togetherness.gb,'flowering')
agreement.sci.cit(togetherness.gb,'fruiting')
agreement.sci.cit(togetherness.gb,'seeding')
agreement.sci.cit(togetherness.rl,'budding')
agreement.sci.cit(togetherness.rl,'flowering')
agreement.sci.cit(togetherness.rl,'fruiting')
agreement.sci.cit(togetherness.rl,'seeding')
#tables saved to 'accuracies and confusion matrices(from part 4 script).xlsx
#####ACCURACZ PER SPECIES#######
#differences between species, for example in flowering id but in all
ls.sp.gb = names(table(togetherness.gb$Species))
ls.sp.rl = names(table(togetherness.rl$Species))
#GB
for (i in 1:11){
sps = subset(togetherness.gb, togetherness.gb$Species == ls.sp.gb[i])
print(ls.sp.gb[i])
agreement.sci.cit(sps, 'budding')
agreement.sci.cit(sps, 'flowering')
agreement.sci.cit(sps, 'fruiting')
agreement.sci.cit(sps, 'seeding')
}
#RL
for(i in 1:11){
sps = subset(togetherness.rl, togetherness.rl$Species == ls.sp.rl[i])
print(ls.sp.rl[i])
agreement.sci.cit(sps, 'budding')
agreement.sci.cit(sps, 'flowering')
agreement.sci.cit(sps, 'fruiting')
agreement.sci.cit(sps, 'seeding')
}
#tables saved to 'accuracies and confusion matrices(from part 4 script).xlsx
##END OF CODE#####
#RL
for(i in 1:11){
sps = subset(togetherness.rl, togetherness.rl$Species == ls.sp.rl[i])
print(ls.sp.rl[i])
agreement.sci.cit(sps, 'budding')
agreement.sci.cit(sps, 'flowering')
agreement.sci.cit(sps, 'fruiting')
agreement.sci.cit(sps, 'seeding')
}
############################DATA PAPER MEADOWATCH###################
###DATA COMPILED BY AJI JOHN
###FIGURES AND THIS ANALYSIS: RUBÃ‰N D. MANZANEDO. APRIL-JULY 2021#########
###################PART 5######################
##Continuation of Figure 4: Data validation comparison of scientist vs. citizen scientists
#load accuracies data per phenostate and species
phenostates = read.csv('Accuracy per phenostate-trail.csv')
head(phenostates)
#graphical parameters
par(bty="o")
par(lwd=2)
par(tcl=-0.2)
par(las=1)
par(cex.lab=1.2)
#Figure 4a: metrics per phenostate
#set the x-axes values for plotting and a small offset for the different hikes
phenostates$Y = 1:4
phenostates$Y2 = phenostates$Y+0.2
#plot each phenostate
plot(accuracy.rl~Y, phenostates,
pch=21,
bg='orange',
lwd=0.5,
cex=2,
ylim=c(0,1),
xlim=c(0.5,4.5),
main='Assessment scientists vs. citizens',
axes=F,
xlab='Phenostates',
ylab='Metric value',
col='white')
axis(1, labels=c('Budding','Flowering','Fruiting','Seeding'),
at=c(1:4))
axis(2)
box()
points(accuracy.gb~Y2, phenostates,
pch=21,
bg='steelblue3',
cex=2,
lwd=0,
col='white')
points(sensitivity.rl~Y, phenostates,
pch=24,
bg='orange',
lwd=0.5,
cex=2,
ylim=c(0,1),
col='white')
points(sensitivity.gb~Y2, phenostates,
pch=24,
bg='steelblue3',
cex=2,
lwd=0.5,
col='white')
points(specificity.rl~Y, phenostates,
pch=23,
bg='orange',
lwd=0.5,
cex=2,
col='white')
points(specificity.gb~Y2, phenostates,
pch=23,
bg='steelblue3',
cex=2,
lwd=0,
col='white')
##add the legends
legend('bottomleft',
legend=c('Accuracy', 'Sensitivity', 'Specificity'),
pch=c(21,24,23),
lwd=1,
box.col='white',
cex=1.25)
legend('bottomright',
legend=c('Glacier Basin', 'Reflection Lakes'),
col=c('orange','steelblue3'),
pch=16,
lwd=1,
box.col='white',
cex=1.25)
#add mean values
lines(x=c(0.9,1.1), y=c(rep(mean(as.numeric(phenostates[1,c(2,4,6)])),2)),
pch=8,
col='orange',
lwd=3)
lines(x=c(1.1,1.3), y=c(rep(mean(as.numeric(phenostates[1,c(3,5,7)])),2)),
pch=8,
col='steelblue3',
lwd=3)
lines(x=c(1.9,2.1), y=c(rep(mean(as.numeric(phenostates[2,c(2,4,6)])),2)),
pch=8,
col='orange',
lwd=3)
lines(x=c(2.1,2.3), y=c(rep(mean(as.numeric(phenostates[2,c(3,5,7)])),2)),
pch=8,
col='steelblue3',
lwd=3)
lines(x=c(2.9,3.1), y=c(rep(mean(as.numeric(phenostates[3,c(2,4,6)])),2)),
pch=8,
col='orange',
lwd=3)
lines(x=c(3.1,3.3), y=c(rep(mean(as.numeric(phenostates[3,c(3,5,7)])),2)),
pch=8,
col='steelblue3',
lwd=3)
lines(x=c(3.9,4.1), y=c(rep(mean(as.numeric(phenostates[4,c(2,4,6)])),2)),
pch=8,
col='orange',
lwd=3)
lines(x=c(4.1,4.3), y=c(rep(mean(as.numeric(phenostates[4,c(3,5,7)])),2)),
pch=8,
col='steelblue3',
lwd=3)
###Figure 4b: metrics per species
#load species data
species = read.csv('Accuracy per species.csv')
means = read.csv('Mean_metrics_per_species.csv')
head(species)
position.sp = as.numeric(as.factor(species$species))
pch.vector = length(species$phenostate)/4
color.orange = rgb(255/255,165/255,0/255,0.4)
color.blue = rgb(79/255,148/255,205/255,0.6)
#ACCURACIES
plot(accuracy.rl~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.orange,
lwd=0.5,
cex=2,
ylim=c(0,1),
main='Accuracy per species',
axes=F,
xlab='Species',
ylab='Metric value')
axis(1, labels=unique(species$species),
at=unique(as.numeric(position.sp)),
las=2)
axis(2)
box()
points(accuracy.gb~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.blue,
cex=2,
lwd=0.5)
#add the mean values per species
means = read.csv('Mean_metrics_per_species.csv')
accura = subset(means, means$mean.metric=='acc')
#sort in alphabetical order
accura = accura[order(accura$species),]
points(accura$value,
pch=8,
col='red',
lwd=3)
#SENSITIVITIES
plot(sensitivity.rl~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.blue,
lwd=0.5,
cex=2,
ylim=c(0,1),
main='Sensitivity per species',
axes=F,
xlab='Species',
ylab='Metric value')
axis(1, labels=unique(species$species),
at=unique(as.numeric(position.sp)),
las=2)
axis(2)
box()
points(sensitivity.gb~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.orange,
cex=2,
lwd=0.5)
#add the mean values per species
sen = subset(means, means$mean.metric=='sen')
#sort in alphabetical order
sen = sen[order(sen$species),]
points(sen$value,
pch=8,
col='red',
lwd=3)
#SPECIFICITIES
plot(specificity.rl~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.blue,
lwd=0.5,
cex=2,
ylim=c(0,1),
main='Specificity per species',
axes=F,
xlab='Species',
ylab='Metric value')
axis(1, labels=unique(species$species),
at=unique(as.numeric(position.sp)),
las=2)
axis(2)
box()
points(specificity.gb~position.sp, species,
pch=rep(c(16,17,18,19), pch.vector),
col=color.orange,
cex=2,
lwd=0.5)
legend('bottomleft',
legend=c('Budding', 'Flowering','Fruiting','Seeding'),
pch=c(16,17,18,19),
lwd=1,
box.col='white',
cex=1.25)
#add the mean values per species
spe = subset(means, means$mean.metric=='spe')
#sort in alphabetical order
spe = spe[order(spe$species),]
points(spe$value,
pch=8,
col='red',
lwd=3)
##END OF CODE
